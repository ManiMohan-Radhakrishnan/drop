{"version":3,"sources":["components/nft-counter/index.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","api/axios-newsletter.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js","../node_modules/@restart/hooks/esm/useCallbackRef.js","images/drops/animation_box.gif","images/drops/treasure_3.jpg","images/treasure/tesla.gif","images/treasure/btc.gif","images/treasure/eth.gif","images/treasure/sand.gif","images/treasure/shiba.gif","images/treasure/mana.gif","components/my-treasure-box/index.js","pages/treasure-box.js"],"names":["NFTCounter","time","cTime","timeClass","intervalClass","intervalGapClass","handleEndEvent","handleBeforeEndEvent","calculateTimeLeft","input","cInput","difference","offset","Date","getTimezoneOffset","input_utc","setMinutes","getMinutes","cInput_utc","cInput_utc_1","cInput_utc_2","timeLeft","days","hours","minutes","seconds","Math","floor","useState","setTimeLeft","useEffect","setTimeout","timerComponents","Object","keys","forEach","interval","custom_interval","x","random","push","className","length","useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","newsletterAxios","axios","create","baseURL","process","interceptors","request","use","config","document","body","classList","add","error","remove","Promise","reject","response","size","scrollbarSize","recalc","canUseDOM","scrollDiv","createElement","style","position","top","width","height","overflow","appendChild","offsetWidth","clientWidth","removeChild","createWithBsPrefix","ModalDialog","React","ref","bsPrefix","contentClassName","centered","fullscreen","children","scrollable","props","useBootstrapPrefix","dialogClass","fullScreenClass","_jsx","classNames","displayName","ModalHeader","AbstractModalHeader","defaultProps","closeLabel","closeButton","DivStyledAsH4","divWithClassName","Component","show","backdrop","keyboard","autoFocus","enforceFocus","restoreFocus","animation","dialogAs","DialogTransition","Fade","timeout","BackdropTransition","Modal","dialogClassName","Dialog","ariaLabelledby","onEscapeKeyDown","onShow","onHide","container","restoreFocusOptions","onEntered","onExit","onExiting","onEnter","onEntering","onExited","backdropClassName","propsManager","manager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","modal","setModalRef","mergedRef","useMergedRefs","handleHide","useEventCallback","isRTL","useIsRTL","modalContext","useMemo","getModalManager","getSharedManager","updateDialogStyle","node","containerIsOverflowing","getScrollbarWidth","modalIsOverflowing","scrollHeight","ownerDocument","documentElement","clientHeight","paddingRight","getScrollbarSize","undefined","paddingLeft","handleWindowResize","dialog","removeEventListener","window","handleDialogMouseDown","handleMouseUp","e","target","handleStaticModalAnimation","transitionEnd","handleClick","currentTarget","handleStaticBackdropClick","renderBackdrop","useCallback","backdropProps","baseModalStyle","display","ModalContext","Provider","BaseModal","preventDefault","isAppearing","addEventListener","transition","backdropTransition","renderDialog","dialogProps","role","onClick","onMouseUp","onMouseDown","assign","Body","ModalBody","Header","Title","ModalTitle","Footer","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION","MyTreasureBox","started","user","useSelector","state","slug","data","setModal","loading3","setLoading3","perkList","setPerkList","trigger","setTrigger","getTreasureList","a","treasureList","result","user_treasures","console","log","handleClaimTreasure","treasureClaim","getEndTime","input_date","getNow","s_time","setSeconds","getSeconds","getLogo","name","tesla","eth","btc","shiba","inr","sand","to","open","expire_at","timeclassName","intervalclassName","map","obj","i","claimed","assert_name","assert_type","src","nft_image","parseInt","currencyFormat","usd_value","two","one","start_at","type","disabled","TreasureBox"],"mappings":"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","file":"static/js/19.0542fed8.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./style.scss\";\n\nfunction NFTCounter({\n  time,\n  cTime,\n  timeClass = \"\",\n  intervalClass = \"\",\n  intervalGapClass = \"\",\n  handleEndEvent = () => {},\n  handleBeforeEndEvent = () => {},\n}) {\n  const calculateTimeLeft = (input, cInput) => {\n    var offset = new Date().getTimezoneOffset();\n    var input_utc = new Date(input);\n    input_utc.setMinutes(input_utc.getMinutes() - offset);\n\n    let difference;\n    if (cInput) {\n      var cInput_utc = new Date(cInput);\n      cInput_utc.setMinutes(cInput_utc.getMinutes() - offset);\n\n      difference = +new Date(input_utc) - +new Date(cInput_utc);\n    } else {\n      var cInput_utc_1 = new Date();\n      cInput_utc_1.setMinutes(cInput_utc_1.getMinutes() - offset);\n\n      difference = +new Date(input_utc) - +new Date(cInput_utc_1);\n    }\n\n    var cInput_utc_2 = new Date();\n    cInput_utc_2.setMinutes(cInput_utc_2.getMinutes() - offset);\n\n    difference = +new Date(input_utc) - +new Date(cInput_utc_2);\n\n    let timeLeft = {\n      days: 0,\n      hours: 0,\n      minutes: 0,\n      seconds: 0.1,\n    };\n\n    if (difference > 0) {\n      timeLeft = {\n        days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n        hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n        minutes: Math.floor((difference / 1000 / 60) % 60),\n        seconds: Math.floor((difference / 1000) % 60),\n      };\n    }\n\n    return timeLeft;\n  };\n\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft(time, cTime));\n\n  useEffect(() => {\n    setTimeout(() => {\n      setTimeLeft(calculateTimeLeft(time, cTime));\n      const { days, hours, minutes, seconds } = calculateTimeLeft(time, cTime);\n      if (!days && !hours && !minutes && seconds <= 0.1) {\n        // if (!days && !hours && !minutes && seconds <= 1) {\n        handleEndEvent();\n      }\n      if (!days && !hours && !minutes && seconds === 5) {\n        handleBeforeEndEvent();\n      }\n    }, 1000);\n  });\n\n  const timerComponents = [];\n\n  Object.keys(timeLeft).forEach((interval) => {\n    if (!timeLeft[interval]) {\n      return;\n    }\n\n    let custom_interval = \"\";\n    switch (interval) {\n      case \"days\":\n        custom_interval = \"d\";\n        break;\n      case \"hours\":\n        custom_interval = \"h\";\n        break;\n      case \"minutes\":\n        custom_interval = \"m\";\n        break;\n      case \"seconds\":\n        custom_interval = \"s\";\n        break;\n      default:\n        custom_interval = \"\";\n        break;\n    }\n    const x = Math.floor(Math.random() * 100 + 1);\n\n    timerComponents.push(\n      <span\n        className={`counter-time ${timeClass}`}\n        key={`${custom_interval}${x}`}\n      >\n        {timeLeft[interval] === 0.1 ? 0 : timeLeft[interval]}\n\n        {/* {timeLeft[interval] <= 1 ? 1 : timeLeft[interval]} */}\n        <span\n          className={`counter-interval interval-gap ${intervalClass} ${intervalGapClass}`}\n        >\n          {custom_interval}\n        </span>\n      </span>\n    );\n  });\n\n  return (\n    <div className={`nft-counter`}>\n      {timerComponents.length ? (\n        timerComponents\n      ) : (\n        <span className={`counter-time ${timeClass}`}>\n          0{/* 1 */}\n          <span\n            className={`counter-interval interval-gap ${intervalClass} ${intervalGapClass}`}\n          >\n            s\n          </span>\n        </span>\n      )}\n    </div>\n  );\n}\n\nexport default NFTCounter;\n","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import axios from \"axios\";\n\nconst newsletterAxios = axios.create({\n  baseURL: process.env.REACT_APP_NEWSLETTER_API,\n});\n\nnewsletterAxios.interceptors.request.use(\n  function (config) {\n    document.body.classList.add(\"loading-indicator\");\n    return config;\n  },\n  function (error) {\n    document.body.classList.remove(\"loading-indicator\");\n    return Promise.reject(error);\n  }\n);\n\nnewsletterAxios.interceptors.response.use(\n  (response) => {\n    document.body.classList.remove(\"loading-indicator\");\n    return response;\n  },\n  (error) => {\n    document.body.classList.remove(\"loading-indicator\");\n    return Promise.reject(error);\n  }\n);\n\nexport const sendEmailNewletter = (props) =>\n  newsletterAxios.post(process.env.REACT_APP_NEWSLETTER_API, props);\n\nexport default newsletterAxios;\n","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", { ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n/* eslint-disable no-use-before-define, react/no-multi-comp */\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n/* eslint-enable no-use-before-define */\n\n\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog,\n  'aria-labelledby': ariaLabelledby,\n\n  /* BaseModal props */\n  show,\n  animation,\n  backdrop,\n  keyboard,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  }); // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n\n    waitingForMouseUpRef.current = false;\n  };\n\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    handleStaticModalAnimation();\n  };\n\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n\n    onHide == null ? void 0 : onHide();\n  };\n\n  const handleEscapeKeyDown = e => {\n    if (!keyboard && backdrop === 'static') {\n      // Call preventDefault to stop modal from closing in restart ui,\n      // then play our animation.\n      e.preventDefault();\n      handleStaticModalAnimation();\n    } else if (keyboard && onEscapeKeyDown) {\n      onEscapeKeyDown(e);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      node.style.display = 'block';\n      updateDialogStyle(node);\n    }\n\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing); // FIXME: This should work even when animation is disabled.\n\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n\n    onExited == null ? void 0 : onExited(node); // FIXME: This should work even when animation is disabled.\n\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = { ...style,\n    ...modalStyle\n  }; // Sets `display` always block when `animation` is false\n\n  if (!animation) {\n    baseModalStyle.display = 'block';\n  }\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-labelledby\": ariaLabelledby,\n    children: /*#__PURE__*/_jsx(Dialog, { ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","import { useState } from 'react';\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\n\nexport default function useCallbackRef() {\n  return useState(null);\n}","export default __webpack_public_path__ + \"static/media/animation_box.58fd0faa.gif\";","export default __webpack_public_path__ + \"static/media/treasure_3.3689f7c0.jpg\";","export default __webpack_public_path__ + \"static/media/tesla.5bc9286e.gif\";","export default __webpack_public_path__ + \"static/media/btc.5bc9286e.gif\";","export default __webpack_public_path__ + \"static/media/eth.5bc9286e.gif\";","export default __webpack_public_path__ + \"static/media/sand.5bc9286e.gif\";","export default __webpack_public_path__ + \"static/media/shiba.5bc9286e.gif\";","export default __webpack_public_path__ + \"static/media/mana.5bc9286e.gif\";","import React, { useState, useRef, useEffect } from 'react'\nimport { Modal } from 'react-bootstrap'\nimport Image from 'react-bootstrap/Image'\nimport { BiLoaderAlt } from 'react-icons/bi'\nimport { Button, Form } from 'react-bootstrap'\nimport { HiOutlineArrowRight } from 'react-icons/hi'\nimport {\n  FaTelegramPlane,\n  FaDiscord,\n  FaInstagram,\n  FaMediumM,\n  FaFacebookF,\n  FaTwitter,\n  FaYoutube,\n} from 'react-icons/fa'\n\nimport one from '../../images/drops/animation_box.gif'\nimport two from '../../images/drops/treasure_3.jpg'\nimport { sendEmailNewletter } from '../../api/axios-newsletter'\nimport { currencyFormat, validateEmail } from './../../utils/common'\nimport { treasureList, treasureClaim } from '../../api/base-methods'\nimport NFTCounter from '../nft-counter'\n\nimport tesla from '../../images/treasure/tesla.gif'\nimport btc from '../../images/treasure/btc.gif'\nimport eth from '../../images/treasure/eth.gif'\nimport sand from '../../images/treasure/sand.gif'\nimport shiba from '../../images/treasure/shiba.gif'\nimport mana from '../../images/treasure/mana.gif'\nimport inr from '../../images/treasure/mana.gif'\n\nimport './style.scss'\nimport { Link, useParams } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { toast } from 'react-toastify'\n\nconst MyTreasureBox = ({ started = true }) => {\n  const r_email = useRef(null)\n  const state = useSelector((state) => state)\n\n  const { user } = state\n  const slug = user.data.user ? user.data.user.slug : null\n  // const { slug } = useParams();\n\n  const [modal, setModal] = useState(false)\n  const [email, setEmail] = useState()\n  const [email2, setEmail2] = useState()\n  const [loading, setLoading] = useState(false)\n  const [loading2, setLoading2] = useState(false)\n  const [loading3, setLoading3] = useState(false)\n  const [vEmail, setVEmail] = useState()\n  const [vEmail2, setVEmail2] = useState()\n\n  const [perkList, setPerkList] = useState([])\n\n  const [trigger, setTrigger] = useState(false)\n\n  useEffect(() => {\n    getTreasureList(slug)\n  }, [slug])\n\n  const getTreasureList = async () => {\n    try {\n      setLoading3(true)\n      const result = await treasureList('5Ew94W79IYgvxkDb')\n      setLoading3(false)\n\n      setPerkList(result.data.data.user_treasures)\n    } catch (error) {\n      setLoading3(false)\n      console.log(\n        '🚀 ~ file: index.js ~ line 43 ~ getTreasureList ~ error',\n        error,\n      )\n    }\n  }\n\n  const handleClaimTreasure = async (slug) => {\n    try {\n      const result = await treasureClaim(slug.slug, '5Ew94W79IYgvxkDb')\n      getTreasureList()\n      // toast.success(\"UnBoxed successfully\");\n    } catch (error) {\n      console.log(\n        '🚀 ~ file: index.js ~ line 130 ~ handleClaimTreasure ~ error',\n        error,\n      )\n    }\n  }\n\n  const getEndTime = (input_date) => {\n    // var offset = new Date().getTimezoneOffset();\n    var s_date = new Date(input_date)\n    // s_date.setMinutes(s_date.getMinutes() - offset);\n\n    return s_date\n  }\n\n  const getNow = () => {\n    var s_time = new Date()\n\n    s_time.setSeconds(s_time.getSeconds() + 2)\n\n    return s_time\n  }\n\n  const getLogo = (name) => {\n    switch (name) {\n      case 'TESLA SHARE':\n        return tesla\n      case 'ETH':\n        return eth\n      case 'BTC':\n        return btc\n      case 'SHIB':\n        return shiba\n      case 'MANA':\n        return mana\n      case 'SAND':\n        return sand\n      case 'INR':\n        return inr\n      default:\n        return shiba\n    }\n  }\n\n  return (\n    <>\n      <div className=\"new_drop_wrapper\">\n        <section className=\"loot_explanation\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                {/* <div className=\"page_title\">\n                  <h1>THE MEGA TREASURE BOX</h1>\n                </div> */}\n                <div className=\"win_box\">\n                  <h4>THE TREASURE BOX HAS ARRIVED</h4>\n                  <h3>\n                    The rewards you have been eagerly waiting for is now here!\n                    The Treasure Box is your arena to unlock the \"Mother of all\n                    Goodness\".\n                  </h3>\n                  <h5>\n                    Visit the Rewards section under{' '}\n                    <Link\n                      to=\"#\"\n                      onClick={() =>\n                        window.open(\n                          `${process.env.REACT_APP_ACCOUNTS_URL}/accounts/wallet`,\n                          '_self',\n                        )\n                      }\n                      target=\"_blank\"\n                      className=\"color\"\n                    >\n                      My GuardianLink Wallet\n                    </Link>{' '}\n                    to redeem the coin rewards you unlock from the Treasure Box.\n                  </h5>\n                </div>\n              </div>\n            </div>\n            <div className=\"row d-flex justify-content-center\">\n              {loading3 ? (\n                <h5 className=\"text-center\">Loading...</h5>\n              ) : (\n                <>\n                  {perkList.length > 0 &&\n                    getEndTime(perkList[0].expire_at) > getNow() && (\n                      <div style={{ display: 'none' }}>\n                        <NFTCounter\n                          time={getEndTime(perkList[0].expire_at)}\n                          handleEndEvent={() => setTrigger(!trigger)}\n                          timeclassName=\"claim-end-time\"\n                          intervalclassName=\"claim-end-interval\"\n                        />\n                      </div>\n                    )}\n                  {perkList.map((obj, i) => (\n                    <div\n                      key={`treasure${i}`}\n                      className=\"col-md-3 gift_info_section\"\n                    >\n                      {obj.claimed ? (\n                        <>\n                          {obj.assert_name ? (\n                            <div className=\"gift_info\">\n                              {obj?.assert_type === 'nft' ? (\n                                <>\n                                  <img\n                                    src={obj.nft_image}\n                                    className=\"png-shadow\"\n                                  />\n                                </>\n                              ) : (\n                                <>\n                                  <img\n                                    src={getLogo(obj.assert_name)}\n                                    className=\"png-shadow\"\n                                  />\n                                </>\n                              )}\n\n                              {obj?.assert_type === 'nft' ? (\n                                <>\n                                  <h3>{`${obj.assert_name}`}</h3>\n                                </>\n                              ) : (\n                                <>\n                                  <h3>\n                                    {`${obj.value}`}{' '}\n                                    {obj.assert_name !== 'BTC' ||\n                                    obj.assert_name !== 'ETH'\n                                      ? `${obj.assert_name} ${\n                                          parseInt(obj?.value) > 1\n                                            ? 'COINS'\n                                            : 'COIN'\n                                        }`\n                                      : obj.assert_name}\n                                  </h3>\n                                </>\n                              )}\n\n                              {obj?.assert_type === 'nft' && <h3>1 NFT</h3>}\n                              {/* {obj.perk.name === \"TESLA SHARE\" ? (\n                                <>\n                                  <h3>{obj.value}</h3> <h3>TESLA SHARE</h3>\n                                </>\n                              ) : (\n                                <h3>{`${obj.value} ${obj.perk.name}`}</h3>\n                              )} */}\n                              {obj?.assert_type === 'token' && (\n                                <p>{currencyFormat(obj.usd_value, 'USD')}</p>\n                              )}\n                              {/* <p>{obj.perk.details}</p> */}\n\n                              {/* {!obj.redeemed && (\n                                <div\n                                  className=\"navigate-info\"\n                                  role=\"button\"\n                                  onClick={() =>\n                                    window.open(\n                                      `${process.env.REACT_APP_ACCOUNTS_URL}/accounts/wallet`,\n                                      \"_self\"\n                                    )\n                                  }\n                                >\n                                  Check your wallet for your updated Treasure\n                                  Box balance\n                                </div>\n                              )} */}\n                            </div>\n                          ) : (\n                            <div className=\"gift_info\">\n                              <img src={two} />\n                              <div className=\"navigate-info\">\n                                Something Better Awaits... but not in here!\n                              </div>\n                            </div>\n                          )}\n                        </>\n                      ) : (\n                        <div className=\"gift_info\">\n                          <img src={one} />\n                          <p>\n                            {getEndTime(obj.expire_at) > getNow() ? (\n                              <>\n                                {getEndTime(obj.start_at) < getNow() ? (\n                                  <>\n                                    <button\n                                      type=\"button\"\n                                      onClick={() => handleClaimTreasure(obj)}\n                                    >\n                                      <span>Open Now</span>\n                                    </button>\n                                  </>\n                                ) : (\n                                  ''\n                                )}\n                                {/* <button\n                                  type=\"button\"\n                                  onClick={() =>\n                                    handleClaimTreasure(obj)\n                                  }\n                                >\n                                  <span>Open Now</span>\n                                </button> */}\n\n                                <div className=\"claim-expiry\">\n                                  {getEndTime(obj.start_at) > getNow() ? (\n                                    <>\n                                      Opens in\n                                      <NFTCounter\n                                        time={getEndTime(obj.start_at)}\n                                        handleEndEvent={() => getTreasureList()}\n                                        timeclassName=\"claim-end-time\"\n                                        intervalclassName=\"claim-end-interval\"\n                                      />\n                                    </>\n                                  ) : (\n                                    <>\n                                      Claim within\n                                      <NFTCounter\n                                        time={getEndTime(obj.expire_at)}\n                                        handleEndEvent={() => getTreasureList()}\n                                        timeclassName=\"claim-end-time\"\n                                        intervalclassName=\"claim-end-interval\"\n                                      />\n                                    </>\n                                  )}\n                                </div>\n                              </>\n                            ) : (\n                              <button type=\"button\" disabled>\n                                Claim Expired\n                              </button>\n                            )}\n                          </p>\n                        </div>\n                      )}\n                    </div>\n                  ))}\n\n                  {perkList.length === 0 && (\n                    <>\n                      <hr />\n                      <div className=\"empty-box-content\">\n                        Sorry, you did not receive a Treasure Box as you did not\n                        acquire enough Super Loot during the drop. <br /> No\n                        worries! The Treasure Box will be returning for our\n                        future drops, stay tuned.\n                      </div>\n                    </>\n                  )}\n                </>\n              )}\n            </div>\n          </div>\n        </section>\n      </div>\n\n      <Modal show={modal} centered>\n        <Modal.Body>\n          <p>Modal body text goes here.</p>\n\n          <button type=\"button\" onClick={() => setModal(false)}>\n            close\n          </button>\n        </Modal.Body>\n      </Modal>\n    </>\n  )\n}\n\nexport default MyTreasureBox\n","import React from \"react\";\nimport Footer from \"../components/landing-home/footer\";\nimport Header from \"../components/landing-home/header\";\nimport MyTreasureBox from \"../components/my-treasure-box\";\n\nconst TreasureBox = () => {\n  return (\n    <>\n      {/* <Header started={false} show_ribbon={false} /> */}\n      <Header/>\n      <MyTreasureBox />\n      <Footer/>\n\n    </>\n  );\n};\n\nexport default TreasureBox;\n"],"sourceRoot":""}